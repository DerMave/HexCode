using HexCode.Common;
using SkiaSharp;
using System;
using System.Collections.Generic;
using System.Text;

namespace HexCode.Client.Renderer
{
    public sealed class RenderPaints
    {

        public SKPaint TerrainStroke = new SKPaint() { StrokeWidth = 5, Color = SKColors.LightGray, IsAntialias = true, Style = SKPaintStyle.Stroke };
        public SKPaint TerrainFill = new SKPaint() { Color = SKColors.DarkSlateGray, Style = SKPaintStyle.Fill };
        public SKPaint TerrainToxic = new SKPaint() { Color = SKColors.LimeGreen, Style = SKPaintStyle.Fill };
        public SKPaint Wall = new SKPaint() { Color = SKColors.LightGray, Style = SKPaintStyle.Fill };
        public SKPaint Water = new SKPaint() { Color = SKColors.DodgerBlue, Style = SKPaintStyle.Fill };
        public SKPaint Mountain = new SKPaint() { Color = SKColors.SandyBrown, Style = SKPaintStyle.Fill };
        public SKPaint RobotRed = new SKPaint() { Color = SKColors.Red, Style = SKPaintStyle.Fill };
        public SKPaint RobotBlue = new SKPaint() { Color = SKColors.Blue, Style = SKPaintStyle.Fill };
        public SKPaint LaserRed = new SKPaint() { StrokeWidth = 6, Color = SKColors.OrangeRed, IsAntialias = true, Style = SKPaintStyle.Stroke };
        public SKPaint Outage = new SKPaint() { StrokeWidth = 4, Color = SKColors.Red, IsAntialias = true, Style = SKPaintStyle.Stroke };
        public SKPaint LaserBlue = new SKPaint() { StrokeWidth = 6, Color = SKColors.LightSkyBlue, IsAntialias = true, Style = SKPaintStyle.Stroke };
        public SKPaint HealthBarStroke = new SKPaint() { StrokeWidth = 1, Color = SKColors.Black, IsAntialias = true, Style = SKPaintStyle.Stroke };
        public SKPaint HealthBarFillWhite = new SKPaint() { TextSize = 16, TextAlign = SKTextAlign.Center, IsAntialias = true, Color = SKColors.White, Style = SKPaintStyle.Fill };
        public SKPaint HealthBarFillGreene = new SKPaint() { Color = SKColors.SpringGreen, Style = SKPaintStyle.Fill };
        public SKPaint OuterRobotId = new SKPaint() { TextSize = 32, TextAlign = SKTextAlign.Center, IsAntialias = true, Color = SKColors.Black, Style = SKPaintStyle.Stroke, StrokeWidth = 1f, Typeface = SKTypeface.FromFamilyName("Terminal", SKTypefaceStyle.Bold) };
        public SKPaint InnerRobotId = new SKPaint() { TextSize = 32, TextAlign = SKTextAlign.Center, IsAntialias = true, Color = SKColors.Lime, Style = SKPaintStyle.Fill, Typeface = SKTypeface.FromFamilyName("Terminal", SKTypefaceStyle.Bold) };
        public SKPaint LogoBg = new SKPaint() { Color = SKColors.Black, IsAntialias = true, Style = SKPaintStyle.Fill };
       public SKPaint Score = new SKPaint() {Color = SKColors.LightSlateGray, IsAntialias = true, Style = SKPaintStyle.Fill };


        public SKColor GetColor(DebugColor dc)
        {

            if (dc == DebugColor.AliceBlue) return new SKColor(240, 248, 255);
            else if (dc == DebugColor.AntiqueWhite) return new SKColor(250, 235, 215);
            else if (dc == DebugColor.Aqua) return new SKColor(0, 255, 255);
            else if (dc == DebugColor.Aquamarine) return new SKColor(127, 255, 212);
            else if (dc == DebugColor.Azure) return new SKColor(240, 255, 255);
            else if (dc == DebugColor.Beige) return new SKColor(245, 245, 220);
            else if (dc == DebugColor.Bisque) return new SKColor(255, 228, 196);
            else if (dc == DebugColor.Black) return new SKColor(0, 0, 0);
            else if (dc == DebugColor.BlanchedAlmond) return new SKColor(255, 235, 205);
            else if (dc == DebugColor.Blue) return new SKColor(0, 0, 255);
            else if (dc == DebugColor.BlueViolet) return new SKColor(138, 43, 226);
            else if (dc == DebugColor.Brown) return new SKColor(165, 42, 42);
            else if (dc == DebugColor.BurlyWood) return new SKColor(222, 184, 135);
            else if (dc == DebugColor.CadetBlue) return new SKColor(95, 158, 160);
            else if (dc == DebugColor.Chartreuse) return new SKColor(127, 255, 0);
            else if (dc == DebugColor.Chocolate) return new SKColor(210, 105, 30);
            else if (dc == DebugColor.Coral) return new SKColor(255, 127, 80);
            else if (dc == DebugColor.CornflowerBlue) return new SKColor(100, 149, 237);
            else if (dc == DebugColor.Cornsilk) return new SKColor(255, 248, 220);
            else if (dc == DebugColor.Crimson) return new SKColor(220, 20, 60);
            else if (dc == DebugColor.Cyan) return new SKColor(0, 255, 255);
            else if (dc == DebugColor.DarkBlue) return new SKColor(0, 0, 139);
            else if (dc == DebugColor.DarkCyan) return new SKColor(0, 139, 139);
            else if (dc == DebugColor.DarkGoldenrod) return new SKColor(184, 134, 11);
            else if (dc == DebugColor.DarkGray) return new SKColor(169, 169, 169);
            else if (dc == DebugColor.DarkGreen) return new SKColor(0, 100, 0);
            else if (dc == DebugColor.DarkKhaki) return new SKColor(189, 183, 107);
            else if (dc == DebugColor.DarkMagenta) return new SKColor(139, 0, 139);
            else if (dc == DebugColor.DarkOliveGreen) return new SKColor(85, 107, 47);
            else if (dc == DebugColor.DarkOrange) return new SKColor(255, 140, 0);
            else if (dc == DebugColor.DarkOrchid) return new SKColor(153, 50, 204);
            else if (dc == DebugColor.DarkRed) return new SKColor(139, 0, 0);
            else if (dc == DebugColor.DarkSalmon) return new SKColor(233, 150, 122);
            else if (dc == DebugColor.DarkSeaGreen) return new SKColor(143, 188, 139);
            else if (dc == DebugColor.DarkSlateBlue) return new SKColor(72, 61, 139);
            else if (dc == DebugColor.DarkSlateGray) return new SKColor(47, 79, 79);
            else if (dc == DebugColor.DarkTurquoise) return new SKColor(0, 206, 209);
            else if (dc == DebugColor.DarkViolet) return new SKColor(148, 0, 211);
            else if (dc == DebugColor.DeepPink) return new SKColor(255, 20, 147);
            else if (dc == DebugColor.DeepSkyBlue) return new SKColor(0, 191, 255);
            else if (dc == DebugColor.DimGray) return new SKColor(105, 105, 105);
            else if (dc == DebugColor.DodgerBlue) return new SKColor(30, 144, 255);
            else if (dc == DebugColor.Firebrick) return new SKColor(178, 34, 34);
            else if (dc == DebugColor.FloralWhite) return new SKColor(255, 250, 240);
            else if (dc == DebugColor.ForestGreen) return new SKColor(34, 139, 34);
            else if (dc == DebugColor.Fuchsia) return new SKColor(255, 0, 255);
            else if (dc == DebugColor.Gainsboro) return new SKColor(220, 220, 220);
            else if (dc == DebugColor.GhostWhite) return new SKColor(248, 248, 255);
            else if (dc == DebugColor.Gold) return new SKColor(255, 215, 0);
            else if (dc == DebugColor.Goldenrod) return new SKColor(218, 165, 32);
            else if (dc == DebugColor.Gray) return new SKColor(128, 128, 128);
            else if (dc == DebugColor.Green) return new SKColor(0, 128, 0);
            else if (dc == DebugColor.GreenYellow) return new SKColor(173, 255, 47);
            else if (dc == DebugColor.Honeydew) return new SKColor(240, 255, 240);
            else if (dc == DebugColor.HotPink) return new SKColor(255, 105, 180);
            else if (dc == DebugColor.IndianRed) return new SKColor(205, 92, 92);
            else if (dc == DebugColor.Indigo) return new SKColor(75, 0, 130);
            else if (dc == DebugColor.Ivory) return new SKColor(255, 255, 240);
            else if (dc == DebugColor.Khaki) return new SKColor(240, 230, 140);
            else if (dc == DebugColor.Lavender) return new SKColor(230, 230, 250);
            else if (dc == DebugColor.LavenderBlush) return new SKColor(255, 240, 245);
            else if (dc == DebugColor.LawnGreen) return new SKColor(124, 252, 0);
            else if (dc == DebugColor.LemonChiffon) return new SKColor(255, 250, 205);
            else if (dc == DebugColor.LightBlue) return new SKColor(173, 216, 230);
            else if (dc == DebugColor.LightCoral) return new SKColor(240, 128, 128);
            else if (dc == DebugColor.LightCyan) return new SKColor(224, 255, 255);
            else if (dc == DebugColor.LightGoldenrodYellow) return new SKColor(250, 250, 210);
            else if (dc == DebugColor.LightGray) return new SKColor(211, 211, 211);
            else if (dc == DebugColor.LightGreen) return new SKColor(144, 238, 144);
            else if (dc == DebugColor.LightPink) return new SKColor(255, 182, 193);
            else if (dc == DebugColor.LightSalmon) return new SKColor(255, 160, 122);
            else if (dc == DebugColor.LightSeaGreen) return new SKColor(32, 178, 170);
            else if (dc == DebugColor.LightSkyBlue) return new SKColor(135, 206, 250);
            else if (dc == DebugColor.LightSlateGray) return new SKColor(119, 136, 153);
            else if (dc == DebugColor.LightSteelBlue) return new SKColor(176, 196, 222);
            else if (dc == DebugColor.LightYellow) return new SKColor(255, 255, 224);
            else if (dc == DebugColor.Lime) return new SKColor(0, 255, 0);
            else if (dc == DebugColor.LimeGreen) return new SKColor(50, 205, 50);
            else if (dc == DebugColor.Linen) return new SKColor(250, 240, 230);
            else if (dc == DebugColor.Magenta) return new SKColor(255, 0, 255);
            else if (dc == DebugColor.Maroon) return new SKColor(128, 0, 0);
            else if (dc == DebugColor.MediumAquamarine) return new SKColor(102, 205, 170);
            else if (dc == DebugColor.MediumBlue) return new SKColor(0, 0, 205);
            else if (dc == DebugColor.MediumOrchid) return new SKColor(186, 85, 211);
            else if (dc == DebugColor.MediumPurple) return new SKColor(147, 112, 219);
            else if (dc == DebugColor.MediumSeaGreen) return new SKColor(60, 179, 113);
            else if (dc == DebugColor.MediumSlateBlue) return new SKColor(123, 104, 238);
            else if (dc == DebugColor.MediumSpringGreen) return new SKColor(0, 250, 154);
            else if (dc == DebugColor.MediumTurquoise) return new SKColor(72, 209, 204);
            else if (dc == DebugColor.MediumVioletRed) return new SKColor(199, 21, 133);
            else if (dc == DebugColor.MidnightBlue) return new SKColor(25, 25, 112);
            else if (dc == DebugColor.MintCream) return new SKColor(245, 255, 250);
            else if (dc == DebugColor.MistyRose) return new SKColor(255, 228, 225);
            else if (dc == DebugColor.Moccasin) return new SKColor(255, 228, 181);
            else if (dc == DebugColor.NavajoWhite) return new SKColor(255, 222, 173);
            else if (dc == DebugColor.Navy) return new SKColor(0, 0, 128);
            else if (dc == DebugColor.OldLace) return new SKColor(253, 245, 230);
            else if (dc == DebugColor.Olive) return new SKColor(128, 128, 0);
            else if (dc == DebugColor.OliveDrab) return new SKColor(107, 142, 35);
            else if (dc == DebugColor.Orange) return new SKColor(255, 165, 0);
            else if (dc == DebugColor.OrangeRed) return new SKColor(255, 69, 0);
            else if (dc == DebugColor.Orchid) return new SKColor(218, 112, 214);
            else if (dc == DebugColor.PaleGoldenrod) return new SKColor(238, 232, 170);
            else if (dc == DebugColor.PaleGreen) return new SKColor(152, 251, 152);
            else if (dc == DebugColor.PaleTurquoise) return new SKColor(175, 238, 238);
            else if (dc == DebugColor.PaleVioletRed) return new SKColor(219, 112, 147);
            else if (dc == DebugColor.PapayaWhip) return new SKColor(255, 239, 213);
            else if (dc == DebugColor.PeachPuff) return new SKColor(255, 218, 185);
            else if (dc == DebugColor.Peru) return new SKColor(205, 133, 63);
            else if (dc == DebugColor.Pink) return new SKColor(255, 192, 203);
            else if (dc == DebugColor.Plum) return new SKColor(221, 160, 221);
            else if (dc == DebugColor.PowderBlue) return new SKColor(176, 224, 230);
            else if (dc == DebugColor.Purple) return new SKColor(128, 0, 128);
            else if (dc == DebugColor.Red) return new SKColor(255, 0, 0);
            else if (dc == DebugColor.RosyBrown) return new SKColor(188, 143, 143);
            else if (dc == DebugColor.RoyalBlue) return new SKColor(65, 105, 225);
            else if (dc == DebugColor.SaddleBrown) return new SKColor(139, 69, 19);
            else if (dc == DebugColor.Salmon) return new SKColor(250, 128, 114);
            else if (dc == DebugColor.SandyBrown) return new SKColor(244, 164, 96);
            else if (dc == DebugColor.SeaGreen) return new SKColor(46, 139, 87);
            else if (dc == DebugColor.SeaShell) return new SKColor(255, 245, 238);
            else if (dc == DebugColor.Sienna) return new SKColor(160, 82, 45);
            else if (dc == DebugColor.Silver) return new SKColor(192, 192, 192);
            else if (dc == DebugColor.SkyBlue) return new SKColor(135, 206, 235);
            else if (dc == DebugColor.SlateBlue) return new SKColor(106, 90, 205);
            else if (dc == DebugColor.SlateGray) return new SKColor(112, 128, 144);
            else if (dc == DebugColor.Snow) return new SKColor(255, 250, 250);
            else if (dc == DebugColor.SpringGreen) return new SKColor(0, 255, 127);
            else if (dc == DebugColor.SteelBlue) return new SKColor(70, 130, 180);
            else if (dc == DebugColor.Tan) return new SKColor(210, 180, 140);
            else if (dc == DebugColor.Teal) return new SKColor(0, 128, 128);
            else if (dc == DebugColor.Thistle) return new SKColor(216, 191, 216);
            else if (dc == DebugColor.Tomato) return new SKColor(255, 99, 71);
            else if (dc == DebugColor.Turquoise) return new SKColor(64, 224, 208);
            else if (dc == DebugColor.Violet) return new SKColor(238, 130, 238);
            else if (dc == DebugColor.Wheat) return new SKColor(245, 222, 179);
            else if (dc == DebugColor.White) return new SKColor(255, 255, 255);
            else if (dc == DebugColor.WhiteSmoke) return new SKColor(245, 245, 245);
            else if (dc == DebugColor.Yellow) return new SKColor(255, 255, 0);
            else if (dc == DebugColor.YellowGreen) return new SKColor(154, 205, 50);
            else if (dc == DebugColor.Transparent) return new SKColor(255, 255, 255);
            else throw new NotImplementedException();

        }

    }
}
